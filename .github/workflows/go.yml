name: Go

on:
  push:
    branches: [ main, test-branch ]
  pull_request:
    branches: [ main ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17

    - name: Build
      run: go build -v ./...

    - name: Test
      run: go test -v ./...

  # => Feed to gosec for security scan
  gosec:
    runs-on: ubuntu-latest
    env:
      GO111MODULE: on
    steps:
      - name: Checkout Source
        uses: actions/checkout@v2
      - name: Run Gosec Security Scanner
        uses: securego/gosec@master
        with:
          # we let the report trigger content trigger a failure using the GitHub Security features.
          args: '-no-fail -fmt sarif -out results.sarif ./...'
      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v1
        with:
          # Path to SARIF file relative to the root of the repository
          sarif_file: results.sarif

#  veracode:
#    runs-on: ubuntu-latest
#    steps:
#    - uses: veracode/veracode-uploadandscan-action@master # Run the uploadandscan action. Inputs are described above.
#      with:
#        filepath: './veracodego.zip'
#        vid: '${{ secrets.VERACODE_API_ID }}'
#        vkey: '${{ secrets.VERACODE_API_KEY }}'
#        createsandbox: 'true'
#        sandboxname: 'SANDBOXNAME'
#        scantimeout: 15
#        exclude: '*.js'
#        include: '*.war'
#        criticality: 'VeryHigh'



